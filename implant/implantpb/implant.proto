syntax = "proto3";
package implantpb;

option go_package = "github.com/chainreactors/malice-network/helper/proto/implant/implantpb";

import "implant/implantpb/module.proto";

message Empty {
}

message Status{
  uint32 task_id = 1;
  int32 status = 2;  // unexcept error
  string error = 3;  //std err
}


// implant call and back data
message Spite {
  string name = 1;
  uint32 task_id = 2;
  bool  async = 3;
  uint64 timeout = 4;
  uint32 error = 5;
  Status status = 6;

  oneof body {
    Empty empty = 10;
    modulepb.Block block = 11;
    modulepb.ACK ack = 13;
    modulepb.ImplantTask task = 14;
    modulepb.Timer sleep_request =15;
    modulepb.SysInfo sysinfo = 20;
    modulepb.Register register = 21;
    modulepb.Ping ping = 22;
    modulepb.Suicide suicide = 23;
    modulepb.Request request = 24;
    modulepb.Response response = 25;
    modulepb.ExecuteBinary execute_binary = 26;
    modulepb.BinaryResponse binary_response = 27;
    modulepb.LoadModule  load_module = 31;
    modulepb.Modules  modules = 32;
    modulepb.LoadAddon load_addon = 35;
    modulepb.Addons addons = 36;
    modulepb.ExecuteAddon execute_addon = 37;
    modulepb.LsResponse ls_response = 101;
    modulepb.ChownRequest chown_request = 102;
    modulepb.ExecRequest exec_request = 104;
    modulepb.ExecResponse exec_response = 105;
    modulepb.UploadRequest upload_request = 106;
    modulepb.DownloadRequest download_request = 107;
    modulepb.DownloadResponse download_response = 108;
    modulepb.NetstatResponse netstat_response = 109;
    modulepb.PsResponse ps_response = 110;
    modulepb.BypassRequest bypass_request = 111;
    modulepb.ExecuteCommand execute_command = 112;
    modulepb.IfconfigResponse ifconfig_response = 118;
    modulepb.CurlRequest curl_request = 119;

    modulepb.Registry registry_request = 121;
    modulepb.RegistryWriteRequest registry_write_request = 122;
    modulepb.TaskSchedule schedule_request = 123;
    modulepb.TaskScheduleResponse schedule_response = 124;
    modulepb.ServiceConfig service_request = 125;
    modulepb.ServicesResponse services_response = 126;
    modulepb.Service service_response = 127;
    modulepb.WmiQueryRequest wmi_request = 128;

    modulepb.RunAsRequest runas_request = 130;
    modulepb.GetSystem getsystem = 131;
    modulepb.Inject inject = 132;
  }
}

message Spites {
  repeated Spite spites = 1;
}
