syntax = "proto3";

package commonpb;
option go_package = "github.com/chainreactors/malice-network/proto/implant/commonpb";

import "implant/pluginpb/plugin.proto";

message Empty {
}

// implant call and back data
message Spite {
  uint32 task_id = 1;
  bool  async = 2;
  uint64 timeout = 3;
  bool end = 4;

  oneof body {
    liteSpite lite_spite = 10;
    pluginpb.ExecRequest exec_request = 11;
    pluginpb.ExecResponse exec_response = 12;
    pluginpb.UploadRequest upload_request = 13;
    pluginpb.UploadResponse upload_response = 14;
    pluginpb.DownloadRequest download_request = 15;
    pluginpb.DownloadResponse download_response = 16;
  }
}

message Spites {
  uint32 session_id = 1;
  repeated Spite spites = 2;
}

// implant unsolicited messages
message Promise{
  uint32 task_id = 1;
  bool  async = 3;
  uint32 duration = 4;
  oneof body {
    Register register = 11;
    Ping ping = 12;
    Suicide suicide = 13;
    // keyboard logger
    // screenshot
    //
  }
}

message Promises {
  uint32 session_id = 1;
  repeated Promise promises = 2;
}


message Register {
  Os os = 11;
  Process process = 12;
  Timer timer = 13;
}

message Ping{
  int32 nonce = 1;
}

message Suicide {
  int32 type = 1;
  int64 timestamp = 2;
}

message liteSpite {
  uint32 task_id = 1;
  uint32 type = 2;
  bytes content = 3;
}


message Os {
  string name = 1;
  string version = 2;
  string arch = 3;
  string username = 4;
  string hostname = 5;
  string locale = 6;
}

message Process {
  string uid = 1;
  string pid = 2;
  string gid = 3;
  string name = 4;
  string args = 5;
}

message Timer {
  int64 interval = 1;
  int64 jitter = 2;
  int64 heartbeat = 3;
}


