syntax = "proto3";

package clientrpc;
option go_package = "github.com/chainreactors/malice-network/proto/services/clientrpc";

import "client/clientpb/client.proto";
import "implant/pluginpb/plugin.proto";
import "listener/lispb/listener.proto";

service MaliceRPC {
  // basic
  rpc GetBasic(clientpb.Empty) returns (clientpb.Basic);
  rpc RegisterCA(clientpb.RegisterReq) returns (clientpb.RegisterResp);
  rpc GetClients(clientpb.Empty) returns (clientpb.Clients);
  rpc GetSessions(clientpb.Empty) returns (clientpb.Sessions);
  rpc GetListeners(clientpb.Empty) returns (clientpb.Listeners);
  rpc GetPipelines(clientpb.Empty) returns (lispb.Pipelines);
  rpc GetJobs(clientpb.Empty) returns (clientpb.Jobs);
  rpc Events(clientpb.Empty) returns (stream clientpb.Event); // start listen events / register client
  rpc LoginClient(clientpb.LoginReq) returns (clientpb.LoginResp);
 // implant
  rpc Execute(pluginpb.ExecRequest) returns (pluginpb.ExecResponse);

  // listener
  rpc StartTcpPipeline(lispb.TCPPipeline) returns (clientpb.Empty);
}